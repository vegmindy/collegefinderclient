[{"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx":"1","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts":"2","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx":"3","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx":"4","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx":"5","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx":"6","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/helpers/environment.tsx":"7","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx":"8","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx":"9","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx":"10","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx":"11","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/navbar.tsx":"12","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedDisplay.tsx":"13","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx":"14","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx":"15","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx":"16","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx":"17","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx":"18","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedTable.tsx":"19","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/updateAccepted.tsx":"20","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/updateAcceptedIndex.tsx":"21","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx":"22","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/favoritesDisplay.tsx":"23","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx":"24","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx":"25","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/updateFavoritesIndex.tsx":"26"},{"size":502,"mtime":1610656121257,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1608259726324,"results":"29","hashOfConfig":"28"},{"size":9430,"mtime":1610696570542,"results":"30","hashOfConfig":"28"},{"size":2665,"mtime":1610695499436,"results":"31","hashOfConfig":"28"},{"size":497,"mtime":1609982789593,"results":"32","hashOfConfig":"28"},{"size":5354,"mtime":1610695336219,"results":"33","hashOfConfig":"28"},{"size":284,"mtime":1610659082521,"results":"34","hashOfConfig":"28"},{"size":2980,"mtime":1610639978657,"results":"35","hashOfConfig":"28"},{"size":10914,"mtime":1610695354871,"results":"36","hashOfConfig":"28"},{"size":12441,"mtime":1610695393458,"results":"37","hashOfConfig":"28"},{"size":5337,"mtime":1610685250327,"results":"38","hashOfConfig":"28"},{"size":8076,"mtime":1610695474679,"results":"39","hashOfConfig":"28"},{"size":4381,"mtime":1610719607612,"results":"40","hashOfConfig":"28"},{"size":4118,"mtime":1610695375505,"results":"41","hashOfConfig":"28"},{"size":864,"mtime":1610718555071,"results":"42","hashOfConfig":"28"},{"size":2569,"mtime":1610640225998,"results":"43","hashOfConfig":"28"},{"size":7269,"mtime":1610695426423,"results":"44","hashOfConfig":"28"},{"size":23693,"mtime":1610718960091,"results":"45","hashOfConfig":"28"},{"size":2471,"mtime":1610695709109,"results":"46","hashOfConfig":"28"},{"size":983,"mtime":1610689062953,"results":"47","hashOfConfig":"28"},{"size":4680,"mtime":1610720141831,"results":"48","hashOfConfig":"28"},{"size":4790,"mtime":1610712477819,"results":"49","hashOfConfig":"28"},{"size":5368,"mtime":1610720312704,"results":"50","hashOfConfig":"28"},{"size":867,"mtime":1610718555987,"results":"51","hashOfConfig":"28"},{"size":4329,"mtime":1610719105152,"results":"52","hashOfConfig":"28"},{"size":3336,"mtime":1610720486332,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"2xbodk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx",[],["118","119"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx",[],["120","121"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/helpers/environment.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx",["122"],"// // // // import React from 'react';\n// // // // import {createStyles, makeStyles} from '@material-ui/core/styles';\n// // // // import {Container} from '@material-ui/core';\n// // // // import LoginIndex from './loginIndex';\n\n// // // // const useStyles = makeStyles(() =>\n// // // //     createStyles({\n// // // //         container: {\n// // // //             marginTop: '12em',\n// // // //             backgroundColor: 'white',\n// // // //             display: 'flex',\n// // // //             justifyContent: 'center',\n// // // //             alignContent: 'center',\n// // // //             height: '100%'\n// // // //         }\n// // // //     }),\n// // // // );\n\n// // // // interface Props {\n// // // //     updateToken: (newToken: string) => void\n// // // // }\n\n// // // // const Login =(props: Props)=>{\n// // // //     const classes = useStyles();\n\n// // // //     return(\n// // // //         <Container className={classes.container}>\n// // // //             <div>\n// // // //                 <h1>LOG IN</h1>\n// // // //                 <LoginIndex updateToken={props.updateToken} />\n// // // //             </div>\n// // // //         </Container>\n// // // //     )\n// // // // }\n\n// // // // export default Login;\n\n\n// // // import React from 'react';\n// // // import APIURL from '../../helpers/environment';\n// // // import { \n// // //     AppBar,\n// // //     Button, \n// // //     // Container,  \n// // //     Dialog, \n// // //     DialogActions, \n// // //     DialogContent, \n// // //     DialogTitle, \n// // //     TextField,\n// // //     /*Typography*/ \n// // // } from '@material-ui/core';\n\n// // // type Props = {\n// // //     login: boolean,\n// // //     updateToken: (newToken: string) => void,\n// // //     // loginHandle: () => void\n// // //     toggle: () => void\n// // // }\n\n// // // type State = {\n// // //     email: string,\n// // //     password: string,\n// // //     handleopen: boolean\n// // // }\n\n// // // export default class Login extends React.Component<Props, State> {\n// // //     constructor(props: Props) {\n// // //         super(props);\n// // //         this.state = {\n// // //             email: '',\n// // //             password: '',\n// // //             handleopen: false\n// // //         }\n// // //     }\n\n// // //     handleSubmit = (event: any) => {\n// // //         event.preventDefault();\n// // //         fetch(`${APIURL}/user/login`, {\n// // //             method: 'POST',\n// // //             body: JSON.stringify({\n// // //                 email: this.state.email,\n// // //                 password: this.state.password\n// // //             }),\n// // //             headers: new Headers({\n// // //                 'Content-Type': 'application/json',\n// // //             }),\n// // //         })\n// // //             .then((res) => res.json())\n// // //             .then(data => {\n// // //                 console.log(data)\n// // //                 this.props.updateToken(data.token);\n// // //                 this.handleClose();\n// // //             });\n// // //     }\n\n// // //     handleOpen = () => {\n// // //         this.setState({\n// // //             handleopen: true,\n// // //         })\n// // //     };\n\n// // //     handleClose = () => {\n// // //         this.setState({\n// // //             handleopen: false,\n// // //         });\n// // //     };\n\n// // //     setEmail(event: string) {\n// // //         this.setState({\n// // //             email: (event)\n// // //         })\n// // //     }\n// // //     setPassword(event: string) {\n// // //         this.setState({\n// // //             password: (event)\n// // //         })\n// // //     }\n\n// // //     render() {\n// // //         return (\n// // //             <div>\n// // //                 <Button onClick={this.handleOpen} id=\"LoginButton\" variant=\"outlined\">\n// // //                     <strong>Login</strong>\n// // //                 </Button>\n// // //                 <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n// // //                     <DialogTitle /*id=\"dialogTitle\"*/ id=\"form-dialog-title\">\n// // //                         <strong>Login</strong>\n// // //                     </DialogTitle>\n// // //                     <DialogContent id=\"Login\">\n// // //                         <TextField\n// // //                             autoFocus\n// // //                             margin=\"dense\"\n// // //                             label=\"Email\"\n// // //                             type=\"text\"\n// // //                             fullWidth\n// // //                             onChange={(e) => this.setEmail(e.target.value)}\n// // //                         />\n// // //                         <TextField\n// // //                             autoFocus\n// // //                             margin=\"dense\"\n// // //                             label=\"Password\"\n// // //                             type=\"password\"\n// // //                             fullWidth\n// // //                             onChange={(e) => this.setPassword(e.target.value)}\n// // //                         />\n// // //                     </DialogContent>\n// // //                     <DialogActions id=\"Loginbtn\">\n// // //                         <Button onClick={this.handleSubmit} id=\"btn\">\n// // //                             <strong>Login</strong>\n// // //                         </Button>\n// // //                     </DialogActions>\n// // //                 </Dialog>\n// // //             </div>\n// // //         )\n// // //     }\n// // // }\n\n// // import React from 'react';\n// // import {createStyles, makeStyles} from '@material-ui/core/styles';\n// // import {Container} from '@material-ui/core';\n// // import LoginIndex from './loginIndex';\n\n// // const useStyles = makeStyles(() =>\n// //     createStyles({\n// //         container: {\n// //             marginTop: '12em',\n// //             backgroundColor: 'white',\n// //             display: 'flex',\n// //             justifyContent: 'center',\n// //             alignContent: 'center',\n// //             height: '100%'\n// //         }\n// //     }),\n// // );\n\n// // interface Props {\n// //     updateToken: (newToken: string) => void\n// // }\n\n// // const Login =(props: Props)=>{\n// //     const classes = useStyles();\n\n// //     return(\n// //         <Container className={classes.container}>\n// //             <div>\n// //                 <h1>LOG IN</h1>\n// //                 <LoginIndex updateToken={props.updateToken} />\n// //             </div>\n// //         </Container>\n// //     )\n// // }\n\n// // export default Login;\n\n\n// import React from 'react';\n// import APIURL from '../../helpers/environment';\n// import {\n//     AppBar,\n//     Button,\n//     Dialog,\n//     DialogActions,\n//     DialogContent,\n//     DialogTitle,\n//     TextField,\n// } from '@material-ui/core';\n\n// type Props = {\n//     login: boolean,\n//     updateToken: (newToken: string) => void,\n//     // loginHandle: () => void\n//     toggle: () => void\n// }\n\n// type State = {\n//     username: string,\n//     password: string,\n//     handleopen: boolean\n// }\n\n// export default class Login extends React.Component<Props, State> {\n//     constructor(props: Props) {\n//         super(props);\n//         this.state = {\n//             username: '',\n//             password: '',\n//             handleopen: false\n//         }\n//     }\n\n//     handleSubmit = (event: any) => {\n//         event.preventDefault();\n//         fetch(`${APIURL}/user/login`, {\n//             method: 'POST',\n//             body: JSON.stringify({\n//                 username: this.state.username,\n//                 password: this.state.password\n//             }),\n//             headers: new Headers({\n//                 'Content-Type': 'application/json',\n//             }),\n//         })\n//             .then((res) => res.json())\n//             .then(data => {\n//                 console.log(data)\n//                 this.props.updateToken(data.token);\n//                 this.handleClose();\n//             });\n//     }\n\n//     handleOpen = () => {\n//         this.setState({\n//             handleopen: true,\n//         })\n//     };\n\n//     handleClose = () => {\n//         this.setState({\n//             handleopen: false,\n//         });\n//     };\n\n//     setUsername(event: string) {\n//         this.setState({\n//             username: (event)\n//         })\n//     }\n//     setPassword(event: string) {\n//         this.setState({\n//             password: (event)\n//         })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <Button onClick={this.handleOpen} id=\"LoginButton\" variant=\"outlined\">\n//                     <strong>Login</strong>\n//                 </Button>\n//                 <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n//                     <DialogTitle /*id=\"dialogTitle\"*/ id=\"form-dialog-title\">\n//                         <strong>Login</strong>\n//                     </DialogTitle>\n//                     <DialogContent id=\"Login\">\n//                         <TextField\n//                             autoFocus\n//                             margin=\"dense\"\n//                             label=\"Username\"\n//                             type=\"text\"\n//                             fullWidth\n//                             onChange={(e) => this.setUsername(e.target.value)}\n//                         />\n//                         <TextField\n//                             autoFocus\n//                             margin=\"dense\"\n//                             label=\"Password\"\n//                             type=\"password\"\n//                             fullWidth\n//                             onChange={(e) => this.setPassword(e.target.value)}\n//                         />\n//                     </DialogContent>\n//                     <DialogActions id=\"Loginbtn\">\n//                         <Button onClick={this.handleSubmit} id=\"btn\">\n//                             <strong>Login</strong>\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n//             </div>\n//         )\n//     }\n// }\n\n\n\nimport React from 'react';\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\nimport {Container} from '@material-ui/core';\nimport LoginIndex from './loginIndex';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        container: {\n            marginTop: '12em',\n            backgroundColor: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            height: '100%'\n        }\n    }),\n);\n\ninterface Props {\n    updateToken: (newToken: string) => void\n}\n\nconst Login =(props: Props)=>{\n    const classes = useStyles();\n\n    return(\n        <Container className={classes.container}>\n            <div>\n                <h1>LOG IN</h1>\n                <LoginIndex updateToken={props.updateToken} />\n            </div>\n        </Container>\n    )\n}\n\nexport default Login;","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx",["123","124"],"import React from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    ButtonGroup,\n    Button,\n    IconButton\n} from '@material-ui/core';\n\n// import Signup from '../Auth/signup';\n// import Login from '../Auth/login';\n\ntype Props = {\n    onClick: () => void;\n    token: string;\n};\n\nexport default class Navbar extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    handleOpenReg = () => {\n        this.setState({\n            signup: true,\n        });\n    };\n\n    handleOpenLog = () => {\n        this.setState({\n            login: true,\n        });\n    };\n\n    HandleCloseReg = () => {\n        this.setState({\n            signup: false,\n        });\n    };\n\n    handleCloseLog = () => {\n        this.setState({\n            login: false,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <AppBar position=\"static\">\n                <Typography className=\"root\" variant=\"h5\">College Finder</Typography>\n                    <Toolbar className=\"root\">\n                        <ButtonGroup>\n                        <Button variant=\"outlined\" color=\"inherit\" onClick={this.props.onClick}>Logout</Button>\n                        </ButtonGroup>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}",["125","126"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/navbar.tsx",["127","128","129","130"],"// // // import React from 'react';\n// // // import {\n// // //     AppBar,\n// // //     Toolbar,\n// // //     Typography,\n// // //     ButtonGroup,\n// // //     Button,\n// // //     IconButton\n// // // } from '@material-ui/core';\n\n// // // type Props = {\n// // //     onClick: () => void;\n// // //     token: string;\n// // // };\n\n// // // export default class Navbar extends React.Component<Props> {\n// // //     constructor(props: Props) {\n// // //         super(props);\n// // //     }\n\n// // //     handleOpenReg = () => {\n// // //         this.setState({\n// // //             signup: true,\n// // //         });\n// // //     };\n\n// // //     handleOpenLog = () => {\n// // //         this.setState({\n// // //             login: true,\n// // //         });\n// // //     };\n\n// // //     HandleCloseReg = () => {\n// // //         this.setState({\n// // //             signup: false,\n// // //         });\n// // //     };\n\n// // //     handleCloseLog = () => {\n// // //         this.setState({\n// // //             login: false,\n// // //         });\n// // //     };\n\n// // //     render() {\n// // //         return (\n// // //             <div className=\"container\">\n// // //                 <AppBar position=\"static\">\n// // //                 <Typography className=\"root\" variant=\"h5\">College Finder</Typography>\n// // //                     <Toolbar className=\"root\">\n// // //                         <ButtonGroup>\n// // //                         <Button variant=\"outlined\" color=\"inherit\" onClick={this.props.onClick}>Logout</Button>\n// // //                         </ButtonGroup>\n// // //                     </Toolbar>\n// // //                 </AppBar>\n// // //             </div>\n// // //         );\n// // //     }\n// // // }\n\n\n// // import React from 'react';\n// // import { createStyles, makeStyles } from '@material-ui/core/styles'\n// // import { AppBar, Toolbar } from '@material-ui/core';\n// // import Grid from '@material-ui/core/Grid';\n// // import Auth from '../Auth/Auth';\n// // import { Link } from 'react-router-dom';\n// // // import AddAccepted from '../Accepted/addAcceptedIndex'\n\n\n// // // const useStyles = makeStyles(() =>\n// // //     createStyles({\n// // //         loginButton: {\n// // //             display: 'flex',\n// // //             justifyContent: 'flex-end'\n// // //         }\n// // //     }),\n// // // );\n\n// // interface Props {\n// //     clearToken:() => void\n// //     token: string\n// // }\n\n// // const NavbBar = (props: Props) => {\n// //     // const classes = useStyles();\n\n// //     return (\n// //         <AppBar position='fixed'>\n// //             <Toolbar>\n// //                 <Grid container spacing={3}>\n// //                     {/* <Grid item xs>\n// //                         <Link to='home'>Home</Link>\n// //                     </Grid> */}\n// //                     <Grid item xs={6}></Grid>\n// //                     {/* <Grid item xs >\n// //                         <Auth clearToken={props.clearToken} />\n// //                     </Grid> */}\n// //                     <Grid item xs>\n// //                         <Link to='/accepted/addschool'>Add Accepted</Link>\n// //                     </Grid>\n// //                     <Grid item xs>\n// //                         <Link to='/schools/all'>View all schools</Link>\n// //                     </Grid>\n// //                     <Grid item xs>\n// //                         <Link to='/accepted/myaccepted'>View all accepted</Link>\n// //                     </Grid>\n// //                     <Grid item xs>\n// //                         <Link to='/favorites/addschool'>Add Favorites</Link>\n// //                     </Grid>\n// //                     <Grid item xs>\n// //                         <Link to='/favorites/myfavorites'>View all favorites</Link>\n// //                     </Grid>\n// //                 </Grid>\n// //             </Toolbar>\n// //         </AppBar>\n// //         // <div>\n// //         //     <Auth clearToken={props.clearToken} />\n// //         //     <Link to='/accepted/addschool'>Add Accepted</Link>\n// //         //     <Link to='/schools/all'>View all schools</Link>\n// //         //     <Link to='/accepted/myaccepted'>View all accepted</Link>\n// //         // </div>\n// //         // <p>nav bar goes here</p>\n// //     )\n// // }\n\n// // export default NavbBar;\n\n\n// import React from 'react';\n// import {\n//     AppBar,\n//     Toolbar,\n//     Typography,\n//     ButtonGroup,\n//     Button,\n//     IconButton\n// } from '@material-ui/core';\n\n// import './navbar.css'\n\n// import Register from '../Auth/signup';\n// import Login from '../Auth/login';\n\n// type Props = {\n//     onClick: () => void;\n//     token: string;\n//     // updateToken: (newToken: string) => void;\n// };\n\n// export default class Navbar extends React.Component<Props> {\n//     constructor(props: Props) {\n//         super(props);\n//     }\n\n//     handleOpenReg = () => {\n//         this.setState({\n//             register: true,\n//         });\n//     };\n\n//     handleOpenLog = () => {\n//         this.setState({\n//             login: true,\n//         });\n//     };\n\n//     HandleCloseReg = () => {\n//         this.setState({\n//             register: false,\n//         });\n//     };\n\n//     handleCloseLog = () => {\n//         this.setState({\n//             login: false,\n//         });\n//     };\n\n//     render() {\n//         return (\n//             <div className=\"container\">\n//                 <AppBar position=\"static\">\n//                 <Typography className=\"root\" variant=\"h5\">College Finder</Typography>\n//                     <Toolbar className=\"root\">\n//                         <ButtonGroup>\n//                         <Button id=\"logout\" variant=\"outlined\" color=\"inherit\" onClick={this.props.onClick}>Logout</Button>\n//                         </ButtonGroup>\n//                     </Toolbar>\n//                 </AppBar>\n//             </div>\n//         );\n//     }\n// }\n\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Auth from '../Auth/Auth';\nimport { Link } from 'react-router-dom';\n// import AddAccepted from '../Accepted/addAcceptedIndex'\n\n\n// const useStyles = makeStyles(() =>\n//     createStyles({\n//         loginButton: {\n//             display: 'flex',\n//             justifyContent: 'flex-end'\n//         }\n//     }),\n// );\n\ninterface Props {\n    clearToken:() => void\n    token: string\n}\n\nconst NavbBar = (props: Props) => {\n    // const classes = useStyles();\n\n    return (\n        <AppBar position='fixed'>\n            <Toolbar>\n                <Grid container spacing={3}>\n                    {/* <Grid item xs>\n                        <Link to='home'>Home</Link>\n                    </Grid> */}\n                    <Grid item xs={6}></Grid>\n                    <Grid item xs >\n                        <Auth clearToken={props.clearToken} />\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/accepted/addschool'>Add Accepted</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/schools/all'>View all schools</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/accepted/myaccepted'>View all accepted</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/favorites/addschool'>Add Favorites</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/favorites/myfavorites'>View all favorites</Link>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n        // <div>\n        //     <Auth clearToken={props.clearToken} />\n        //     <Link to='/accepted/addschool'>Add Accepted</Link>\n        //     <Link to='/schools/all'>View all schools</Link>\n        //     <Link to='/accepted/myaccepted'>View all accepted</Link>\n        // </div>\n        // <p>nav bar goes here</p>\n    )\n}\n\nexport default NavbBar;","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedDisplay.tsx",["131","132"],"import React, { Component } from 'react'\nimport APIURL from '../../helpers/environment';\nimport AddAccepted from './addAccepted'\nimport { Button, Card, CardContent } from '@material-ui/core';\nimport './acceptedDisplay.css';\nimport UpdateAcceptedIndex from './updateAcceptedIndex';\nimport UpdateAccepted from './updateAccepted';\n\ntype AcceptedState = {\n    accepted: Array<{\n        id: number,\n        schoolName: string,\n        address: string,\n        accepted: string,\n        pros: string,\n        cons: string,\n        notes: string,\n        inState: string,\n    }>;\n    updateAccepted: {};\n    setUpdateActive: boolean;\n}\n\ninterface Props {\n    token: string\n}\n\n// console.log('oh hi mark')\n\n\nexport default class AcceptedDisplay extends Component<Props, AcceptedState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            accepted: [],\n            updateAccepted: {},\n            setUpdateActive: false\n        }\n    }\n\n    componentDidMount() {\n        // console.log('hi im here in the componenetDidMount')\n        this.fetchAccepted();\n    }\n\n    fetchAccepted() {\n        // console.log(\"orange\")\n        fetch(`${APIURL}/accepted/myaccepted`, {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.props.token,\n            })\n        }).then((res) => res.json())\n            .then(data => {\n                this.setState({\n                    accepted: data\n                })\n                console.log(\"potato\")\n                console.log(data)\n\n            }).catch((error) =>\n                console.log(error)\n            )\n    }\n\n    deleteAccepted =(accepted: any) =>{\n        fetch(`${APIURL}/accepted/delete/${accepted.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'content-type': 'application/json', \n                'Authorization': this.props.token,\n            })\n        })\n        .then(()=> this.fetchAccepted())\n    }\n\n\n    editUpdateAccepted = (accepted: any) => {\n        console.log(accepted);\n        this.setState({ updateAccepted: accepted })\n    }\n\n    updateOn =() => {\n        this.setState({setUpdateActive: true})\n    }\n\n    updateOff = () => {\n        this.setState({setUpdateActive: false})\n    }\n\n    handleSubmit() {\n        // event.preventDefault()\n        this.fetchAccepted()\n    }\n    // handleOpen = () => {\n    //     this.setState({\n    //         handleOpen: true\n    //     })\n    // }\n\n    render() {\n        return (\n            <div>\n                {this.state.accepted.map(accepted => {\n                    return (\n                        <Card id=\"overallCard\" key={accepted.id}>\n                            <CardContent>School Name: </CardContent>\n                            <CardContent id=\"schoolName\">{accepted.schoolName}</CardContent>\n                            <CardContent>Address: {accepted.address}</CardContent>\n                            <CardContent>Have I been accepted:  {accepted.accepted}</CardContent>\n                            <CardContent>Pros:  {accepted.pros}</CardContent>\n                            <CardContent>Cons:  {accepted.cons}</CardContent>\n                            <CardContent>Notes:  {accepted.notes}</CardContent>\n                            <CardContent>Is the school in state?  {accepted.inState}</CardContent>\n                            {/* <Button onClick={() => {this.fetchAccepted()}}>Fetch</Button> */}\n                            <Button onClick={() =>{\n                                this.editUpdateAccepted(accepted);\n                                this.updateOn();\n                                \n                                }} >Update</Button>\n                            <Button onClick={() => {\n                                this.deleteAccepted(accepted);\n                            }}>Delete</Button>\n                        </Card>\n                    )\n                })};\n                {this.state.setUpdateActive ? (\n                    <UpdateAcceptedIndex\n                    updateOff ={this.updateOff}\n                    token = {this.props.token}\n                    fetchAccepted = {this.fetchAccepted}\n                    updateAccepted = {this.state.updateAccepted}\n                    />\n                ): (\n                    <></>\n                )\n            }\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx",["133","134","135","136"],"import React, { Component } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport SchoolDisplay from './schoolDisplay';\nimport APIURL from '../../helpers/environment';\n\ntype FetchResultsState = {\n    search: string,\n    pageNumber: number,\n    results: any,\n}\n\ninterface Props {\n    token: string\n    // results: \n}\n\n\nexport default class SchoolSearch extends Component<Props, FetchResultsState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            search: '',\n            pageNumber: 0,\n            results: [], \n        };\n    }\n    searchFunction(event: any) {\n        this.setState({\n            search: (event)\n        })\n        console.log(\"hello4\")\n\n    }\n\n\n    // fetchResults = () => {\n    fetchResults(event: React.FormEvent<HTMLFormElement>){\n        event.preventDefault();\n    fetch(`${APIURL}/schools/all`, {\n        method: 'GET',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': this.props.token,\n        })\n        \n    }) .then((res) => res.json())\n    .then(data => {\n        console.log(data)\n        this.setState({\n            results: data\n        })\n    }) .catch (( error) =>\n    console.log(error)\n    )\n}\n\n    \n\n    handleSubmit(event: any) {\n        event.preventDefault()\n        this.fetchResults(event)\n    }\n\n    nextPage(event: any){\n        event.preventDefault()\n        this.setState({\n            pageNumber: this.state.pageNumber+1\n        })\n        this.fetchResults(event)\n    }\n\n    previousPage(event: any){\n        event.preventDefault()\n        if(this.state.pageNumber > 0) {\n        this.setState({\n            pageNumber: this.state.pageNumber-1\n        })\n        this.fetchResults(event)\n    }\n    }\n\n    render() {\n        return (\n        <div className=\"main\">\n        <div className=\"mainDiv\">\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n                <label>Search: </label>\n                <input type =\"text\" name =\"search\" onChange ={(e) => this.setState({search: e.target.value})} />\n                <br />\n                <button type='submit'>Search</button>\n                <hr />\n                <SchoolDisplay results={this.state.results} />\n                <button onClick={(e)=> this.previousPage(e)}>Previous Page</button>\n                <button onClick={(e)=> this.nextPage(e)}>Next Page</button>\n            </form>\n        </div>\n        </div>\n        );\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx",["137","138","139","140","141"],"import React, { Component } from 'react';\nimport { TextField, Button, MenuItem, FormControl, InputLabel, Select, FormHelperText } from '@material-ui/core';\nimport APIURL from '../../helpers/environment';\n\n\ntype SignUpState = {\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n    currentState: string,\n    role: string\n}\n\ninterface Props {\n    updateToken: (newToken: string) => void\n}\n\nexport default class SignUpIndex extends Component<Props, SignUpState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            currentState: '',\n            role: ''\n        }\n        // this.handleInputChange = this.handleImputChange.bind(this)\n    }\n\n    // handleChange(event) {\n    //     // this.setState({firstName: event.target.value})\n    //     const target = event.target;\n    //     const value = target.type === \n    // }\n\n    setFirstName(e: string) {\n        this.setState({\n            firstName: (e)\n        })\n    }\n\n    setLastName(e: string) {\n        this.setState({\n            lastName: (e)\n        })\n    }\n\n    setEmail(e: string) {\n        this.setState({\n            email: (e)\n        })\n    }\n\n    setPassword(e: string) {\n        this.setState({\n            password: (e)\n        })\n    }\n\n    setCurrentState(e: string) {\n        this.setState({\n            currentState: (e)\n        })\n    }\n\n    setRole(e: string) {\n        this.setState({\n            role: (e)\n        })\n    }\n\n    signUpUser(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        fetch(`${APIURL}/user/signup`, {\n            method: 'POST',\n            body: JSON.stringify({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                password: this.state.password,\n                currentState: this.state.currentState,\n                role: this.state.role\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then((response) => response.json())\n            .then((data) => {\n                this.props.updateToken(data.token)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this.signUpUser(e)} >\n                    <TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" onChange={(e) => this.setState({ firstName: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" onChange={(e) => this.setLastName(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" onChange={(e) => this.setState({ email: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" type=\"password\" label=\"Password\" variant=\"outlined\" onChange={(e) => this.setState({ password: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Home State\" variant=\"outlined\" onChange={(e) => this.setState({ currentState: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Role\" variant=\"outlined\" onChange={(e)=>this.setState({role: (e.target.value)})} />\n                    <Button type='submit' variant=\"contained\">Create Account</Button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx",["142","143","144","145","146","147"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedTable.tsx",["148","149"],"import React from 'react';\nimport APIURL from '../../helpers/environment';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\n// import { render } from '@testing-library/react';\n\ntype Props = {\n    // myAccepted: any,\n    myAccepted: Array<{ \n        id: number,\n        schoolName: string,\n        address: string,\n        accepted: string,\n        pros: string,\n        cons: string,\n        notes: string,\n        inState: string, \n    }>\n    editUpdateAccepted: (accepted: any) => void,\n    updateOn: () => void,\n    fetchAccepted: () => void,\n    token: string\n}\nexport default class AcceptedTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (accepted: any) => {\n        fetch(`${APIURL}/accepted/delete/${accepted.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchAccepted())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myAccepted\n                    ? this.props.myAccepted.map((myAccepted) => (\n                        <Card key={myAccepted.id}>\n                            <CardContent>{myAccepted.schoolName}</CardContent>\n                            <CardContent>{myAccepted.address}</CardContent>\n                            <CardContent>{myAccepted.accepted}</CardContent>\n                            <CardContent>{myAccepted.pros}</CardContent>\n                            <CardContent>{myAccepted.cons}</CardContent>\n                            <CardContent>{myAccepted.notes}</CardContent>\n                            <CardContent>{myAccepted.inState}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateAccepted(myAccepted); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myAccepted) }}>delete</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}",["150","151"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/updateAccepted.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/updateAcceptedIndex.tsx",["152"],"import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport APIURL from '../../helpers/environment';\n\ntype Props = {\n    // updateToken: (newToken: string) => void\n    // fetchAccepted: () => void\n    updateAccepted: any,\n    updateOff: () => void,\n    fetchAccepted: () => void,\n    token: string\n}\n\ntype AcceptedState = {\n    schoolName: string,\n    address: string,\n    inState: string,\n    accepted: string,\n    pros: string,\n    cons: string,\n    notes: string,\n    handleopen: boolean\n}\n\n\n\nexport default class UpdateAcceptedIndex extends Component<Props, AcceptedState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            schoolName: this.props.updateAccepted.schoolName,\n            address: this.props.updateAccepted.address,\n            inState: this.props.updateAccepted.inState,\n            accepted: this.props.updateAccepted.accepted,\n            pros: this.props.updateAccepted.pros,\n            cons: this.props.updateAccepted.cons,\n            notes: this.props.updateAccepted.notes,\n            handleopen: false,\n        }\n    }\n\n    updateAcceptedSchool = (e: any) => {\n        e.preventDefault();\n        console.log(this.props.updateAccepted.schoolName);\n        console.log(\"token:\" , this.props.token)\n        fetch(`${APIURL}/accepted/updateschool/${this.props.updateAccepted.id}`, {\n            method: 'PUT',\n            // body: updateAccepted,\n            body: JSON.stringify({\n                schoolName: this.state.schoolName,\n                address: this.state.address,\n                inState: this.state.inState,\n                accepted: this.state.accepted,\n                pros: this.state.pros,\n                cons: this.state.cons,\n                notes: this.state.notes\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                // 'Authorization': `${localStorage.getItem('token')}`\n                'Authorization': this.props.token,\n            })\n        })\n            // .then((response) => response.json())\n            //     .then((data) => {\n            //         console.log(data)\n            //         this.props.fetchAccepted();\n            //     })\n\n            .then(() => {\n                this.props.fetchAccepted();\n                this.props.updateOff();\n            }) .catch((error) => console.log(error))\n    }\n\n    updateAcceptedForm = () => {\n        this.props.updateOff();\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        })\n    }\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        })\n    }\n\n    setSchoolName(event: string) {\n        this.setState({\n            schoolName: (event)\n        })\n    }\n\n    setAddress(event: string) {\n        this.setState({\n            address: (event)\n        })\n    }\n\n    setInState(event: string) {\n        this.setState({\n            inState: (event)\n        })\n    }\n\n    setAccepted(event: string) {\n        this.setState({\n            accepted: (event)\n        })\n    }\n\n    setPros(event: string) {\n        this.setState({\n            pros: (event)\n        })\n    }\n\n    setCons(event: string) {\n        this.setState({\n            cons: (event)\n        })\n    }\n\n    setNotes(event: string) {\n        this.setState({\n            notes: (event)\n        })\n    }\n\n    componentDidMount() {\n        console.log(\"addSchool didMount: \", this.props.token);\n        console.log(this.props.updateAccepted);\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.updateAcceptedSchool} >\n                    <TextField id=\"outlined-basic\" label=\"School Name\" variant=\"outlined\" value={this.state.schoolName} onChange={(e) => this.setSchoolName(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"School Address\" variant=\"outlined\" value={this.state.address} onChange={(e) => this.setAddress(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Is the school in state?\" variant=\"outlined\" value={this.state.inState} onChange={(e) => this.setInState(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Have you been accepted?\" variant=\"outlined\" value={this.state.accepted} onChange={(e) => this.setAccepted(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Pros\" variant=\"outlined\" value={this.state.pros} onChange={(e) => this.setPros(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Cons\" variant=\"outlined\" value={this.state.cons} onChange={(e) => this.setCons(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" value={this.state.notes} onChange={(e) => this.setNotes(e.target.value)} />\n                    <Button type='submit' variant=\"contained\">Update school</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n// import React, { Component } from 'react';\n// import { TextField, Button} from '@material-ui/core';\n// import APIURL from '../../helpers/environment';\n\n\n// type AcceptedState = {\n//     schoolName: string,\n//     address: string,\n//     inState: string,\n//     accepted: string,\n//     pros: string,\n//     cons: string,\n//     notes: string,\n// }\n\n// interface Props {\n//     // updateToken: (newToken: string) => void\n//     token: string\n// }\n\n// export default class UpdateAcceptedIndex extends Component<Props, AcceptedState>{\n//     constructor(props: Props) {\n//         super(props)\n//         this.state = {\n//             schoolName: '',\n//             address: '',\n//             inState: '',\n//             accepted: '',\n//             pros: '',\n//             cons: '',\n//             notes: '',\n//         }\n//     }\n\n//     setSchoolName(e: string) {\n//         this.setState({\n//             schoolName: (e)\n//         })\n//     }\n\n//     setAddress(e: string) {\n//         this.setState({\n//             address: (e)\n//         })\n//     }\n\n//     setInState(e: string) {\n//         this.setState({\n//             inState: (e)\n//         })\n//     }\n\n//     setAccepted(e: string) {\n//         this.setState({\n//             accepted: (e)\n//         })\n//     }\n\n//     setPros(e: string) {\n//         this.setState({\n//             pros: (e)\n//         })\n//     }\n\n//     setCons(e: string) {\n//         this.setState({\n//             cons: (e)\n//         })\n//     }\n\n//     setNotes(e: string) {\n//         this.setState({\n//             notes: (e)\n//         })\n//     }\n\n//     componentDidMount() {\n//         console.log(\"addSchool didMount: \", this.props.token);\n//       }\n\n//     updateAccepted(e: any) {\n//         e.preventDefault();\n//         fetch(`${APIURL}/accepted/addschool/${}`, {\n//             method: 'POST',\n//             body: JSON.stringify({\n//                 schoolName: this.state.schoolName,\n//                 address: this.state.address,\n//                 inState: this.state.inState,\n//                 accepted: this.state.accepted,\n//                 pros: this.state.pros,\n//                 cons: this.state.cons,\n//                 notes: this.state.notes\n//             }),\n//             headers: new Headers({\n//                 'Content-Type': 'application/json',\n//                 // 'Authorization': `${localStorage.getItem('token')}`\n//                 'Authorization': this.props.token,\n//             })\n//         })\n//         .then((response) => response.json())\n//             .then((data) => {\n//                 console.log(data)\n//             })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <form onSubmit={(e)=>this.updateAccepted(e)} >\n//                     <TextField id=\"outlined-basic\" label=\"School Name\" variant=\"outlined\" onChange={(e)=>this.setSchoolName(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"School Address\" variant=\"outlined\" onChange={(e)=>this.setAddress(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"Is the school in state?\" variant=\"outlined\" onChange={(e)=>this.setInState(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"Have you been accepted?\" variant=\"outlined\" onChange={(e)=>this.setAccepted(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"Pros\" variant=\"outlined\" onChange={(e)=>this.setPros(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"Cons\" variant=\"outlined\" onChange={(e)=>this.setCons(e.target.value)} />\n//                     <TextField id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" onChange={(e)=>this.setNotes(e.target.value)} />\n//                     <Button type='submit' variant=\"contained\">Update school</Button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/favoritesDisplay.tsx",["153","154"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx",["155","156","157","158","159"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/updateFavoritesIndex.tsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":199,"column":5,"nodeType":"168","messageId":"169","endLine":199,"endColumn":11},{"ruleId":"166","severity":1,"message":"170","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":20,"column":5,"nodeType":"173","messageId":"174","endLine":22,"endColumn":6},{"ruleId":"160","replacedBy":"175"},{"ruleId":"162","replacedBy":"176"},{"ruleId":"166","severity":1,"message":"170","line":137,"column":5,"nodeType":"168","messageId":"169","endLine":137,"endColumn":15},{"ruleId":"166","severity":1,"message":"177","line":142,"column":8,"nodeType":"168","messageId":"169","endLine":142,"endColumn":16},{"ruleId":"166","severity":1,"message":"178","line":143,"column":8,"nodeType":"168","messageId":"169","endLine":143,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":152,"column":5,"nodeType":"173","messageId":"174","endLine":154,"endColumn":6},{"ruleId":"166","severity":1,"message":"179","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"180","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":22},{"ruleId":"166","severity":1,"message":"181","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":22},{"ruleId":"166","severity":1,"message":"182","line":2,"column":24,"nodeType":"168","messageId":"169","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"184","line":39,"column":5,"nodeType":"185","messageId":"186","endLine":52,"endColumn":14,"fix":"187"},{"ruleId":"183","severity":1,"message":"188","line":39,"column":5,"nodeType":"185","messageId":"186","endLine":46,"endColumn":13,"fix":"189"},{"ruleId":"166","severity":1,"message":"190","line":2,"column":29,"nodeType":"168","messageId":"169","endLine":2,"endColumn":37},{"ruleId":"166","severity":1,"message":"191","line":2,"column":39,"nodeType":"168","messageId":"169","endLine":2,"endColumn":50},{"ruleId":"166","severity":1,"message":"192","line":2,"column":52,"nodeType":"168","messageId":"169","endLine":2,"endColumn":62},{"ruleId":"166","severity":1,"message":"193","line":2,"column":64,"nodeType":"168","messageId":"169","endLine":2,"endColumn":70},{"ruleId":"166","severity":1,"message":"194","line":2,"column":72,"nodeType":"168","messageId":"169","endLine":2,"endColumn":86},{"ruleId":"166","severity":1,"message":"195","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"196","line":6,"column":5,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"197","line":7,"column":5,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"166","severity":1,"message":"191","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":16},{"ruleId":"166","severity":1,"message":"192","line":9,"column":5,"nodeType":"168","messageId":"169","endLine":9,"endColumn":15},{"ruleId":"166","severity":1,"message":"198","line":10,"column":5,"nodeType":"168","messageId":"169","endLine":10,"endColumn":8},{"ruleId":"166","severity":1,"message":"199","line":7,"column":5,"nodeType":"168","messageId":"169","endLine":7,"endColumn":10},{"ruleId":"171","severity":1,"message":"172","line":29,"column":5,"nodeType":"173","messageId":"174","endLine":31,"endColumn":6},{"ruleId":"160","replacedBy":"200"},{"ruleId":"162","replacedBy":"201"},{"ruleId":"183","severity":1,"message":"184","line":46,"column":9,"nodeType":"185","messageId":"186","endLine":73,"endColumn":22,"fix":"202"},{"ruleId":"166","severity":1,"message":"203","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":20},{"ruleId":"166","severity":1,"message":"204","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":23},{"ruleId":"166","severity":1,"message":"196","line":6,"column":5,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"197","line":7,"column":5,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"166","severity":1,"message":"191","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":16},{"ruleId":"166","severity":1,"message":"192","line":9,"column":5,"nodeType":"168","messageId":"169","endLine":9,"endColumn":15},{"ruleId":"166","severity":1,"message":"198","line":10,"column":5,"nodeType":"168","messageId":"169","endLine":10,"endColumn":8},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],"@typescript-eslint/no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["205"],["206"],"'Register' is defined but never used.","'Login' is defined but never used.","'AddAccepted' is defined but never used.","'UpdateAccepted' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"207","text":"208"},"Unexpected whitespace before property then.",{"range":"209","text":"208"},"'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'FormHelperText' is defined but never used.","'Component' is defined but never used.","'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","'Box' is defined but never used.","'Table' is defined but never used.",["205"],["206"],{"range":"210","text":"208"},"'AddFavorites' is defined but never used.","'UpdateFavorites' is defined but never used.","no-global-assign","no-unsafe-negation",[1211,1213],".",[1070,1072],[2374,2376]]