[{"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx":"1","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts":"2","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx":"3","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx":"4","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx":"5","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx":"6","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx":"7","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx":"8","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx":"9","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx":"10","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx":"11","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx":"12","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/AppIndex.tsx":"13","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/appIndex.tsx":"14","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx":"15","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx":"16","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx":"17","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx":"18","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx":"19","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx":"20"},{"size":502,"mtime":1609378983712,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1608259726324,"results":"23","hashOfConfig":"22"},{"size":2239,"mtime":1610409912212,"results":"24","hashOfConfig":"22"},{"size":3384,"mtime":1610410978479,"results":"25","hashOfConfig":"22"},{"size":1449,"mtime":1610333627543,"results":"26","hashOfConfig":"22"},{"size":1328,"mtime":1610411212998,"results":"27","hashOfConfig":"22"},{"size":497,"mtime":1609982789593,"results":"28","hashOfConfig":"22"},{"size":825,"mtime":1610243086704,"results":"29","hashOfConfig":"22"},{"size":849,"mtime":1610329009805,"results":"30","hashOfConfig":"22"},{"size":3365,"mtime":1610330811348,"results":"31","hashOfConfig":"22"},{"size":496,"mtime":1610409894858,"results":"32","hashOfConfig":"22"},{"size":1943,"mtime":1610410023957,"results":"33","hashOfConfig":"22"},{"size":922,"mtime":1610243373970,"results":"34","hashOfConfig":"22"},{"size":1491,"mtime":1610410683910,"results":"35","hashOfConfig":"22"},{"size":2764,"mtime":1610405618077,"results":"36","hashOfConfig":"22"},{"size":3693,"mtime":1610411353548,"results":"37","hashOfConfig":"22"},{"size":874,"mtime":1610332100721,"results":"38","hashOfConfig":"22"},{"size":2808,"mtime":1610332940525,"results":"39","hashOfConfig":"22"},{"size":2511,"mtime":1610401496519,"results":"40","hashOfConfig":"22"},{"size":2348,"mtime":1610394580499,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2xbodk",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx",[],["88","89"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx",["90"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx",[],["91","92"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx",["93","94","95"],"import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\ntype LoginState = {\n    email: string,\n    password: string\n}\n\ninterface Props {\n    updateToken: (newToken: string) => void\n}\n\nexport default class LoginIndex extends Component<Props, LoginState>{\n    constructor(props: Props){\n        super(props)\n        this.state ={\n            email: '',\n            password: ''\n        }\n    }\n\n    // setEmail(e: any){\n    //     this.setState({\n    //         email: (e)\n    //     })\n    // }\n\n    // setPassword(e: any){\n    //     this.setState({\n    //         password: (e)\n    //     })\n    // }\n\n    loginUser(e: React.FormEvent<HTMLFormElement>){\n        e.preventDefault();\n        fetch('http://localhost:3000/user/login',{\n            method: 'POST',\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        // }).then((response)=> response.json())\n        //     .then((data)=> {\n        //         this.props.updateToken(data.token)\n        //     })\n        }) .then (\n            (response) => response.json()\n        ) .then((data) => {\n            console.log(data)\n        }) .catch (( error) =>\n            console.log(error)\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e)=>this.loginUser(e)} >\n                    <TextField id=\"outlined-basic\" label=\"email\" variant=\"outlined\" onChange={(e)=>this.setState({email: (e.target.value)})} />\n                    <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange={(e)=>this.setState({password: (e.target.value)})} />\n                    <Button type='submit' variant='contained'>LOG IN</Button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/AppIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/appIndex.tsx",["96","97","98","99"],"import React, { Component } from 'react';\nimport Main from './Components/index';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Auth from './Components/Auth/Auth'\nimport AddAccepted from './Components/Accepted/addAccepted';\nimport AddAcceptedIndex from './Components/Accepted/addAcceptedIndex';\n\n// type AppState = {\n//     token: string\n//     // schoolsUpdate: any\n// }\n\nexport default class AppIndex extends Component {\n    // constructor(){\n    //     super(props)\n    //     this.state = {\n    //         token: localStorage.getItem('token') ? localStorage.getItem('token') : '' ,\n    //         // schoolsUpdate: []\n    //     }\n    // }\n\n\n    state = {\n        token: \"\"\n    }\n\n    componentWillMount() {\n        if (localStorage.getItem('token')) {\n            this.setState({\n                token: localStorage.getItem('token')\n            })\n        }\n        console.log(this.state.token)\n    }\n\n\n    componentDidMount() {\n        console.log(this.state.token)\n    }\n\n\n    updateToken = (newToken: string) => {\n        localStorage.setItem('token', newToken)\n        this.setState({\n            token: newToken\n        })\n    }\n\n    clearToken = () => {\n        localStorage.clear();\n        this.setState({\n            token: ''\n        })\n    }\n\n    render() {\n        return (\n            <div className='app'>\n                <Main updateToken={this.updateToken} token={this.state.token} clearToken={this.clearToken} />\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx",["100"],"import React, { Component, ReactHTML } from 'react';\nimport { TextField, Button} from '@material-ui/core';\n\ntype FavoritesState = {\n    schoolName: string,\n    address: string,\n    inState: string,\n    notes: string\n}\n\ninterface Props {\n    // updateToken: (newToken: string) => void\n    token: string | null\n}\n\nexport default class AddFavoritesIndex extends Component<Props, FavoritesState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            schoolName: '',\n            address: '',\n            inState: '',\n            notes: ''\n        }\n    }\n\n    setSchoolName(e: string) {\n        this.setState({\n            schoolName: (e)\n        })\n    }\n\n    setAddress(e: string) {\n        this.setState({\n            address: (e)\n        })\n    }\n\n    setInState(e: string) {\n        this.setState({\n            inState: (e)\n        })\n    }\n\n    setNotes(e: string) {\n        this.setState({\n            notes: (e)\n        })\n    }\n\n    addFavorites(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        fetch('http://localhost:3000/favorites/addschool', {\n            method: 'POST',\n            body: JSON.stringify({\n                schoolName: this.state.schoolName,\n                address: this.state.address,\n                inState: this.state.inState,\n                notes: this.state.notes\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                // 'Authorization': `${localStorage.getItem('token')}`\n                'Authorization': `${this.props.token}`,\n            })\n        })\n        // .then((response) => response.json())\n        //     .then((data) => {\n        //         this.props.updateToken(data.token)\n        //         // setSubmitSuccess\n        //     })\n        .then((response) => response.json())\n            .then((data) => {\n                console.log(data)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e)=>this.addFavorites(e)} >\n                    <TextField id=\"outlined-basic\" label=\"School Name\" variant=\"outlined\" onChange={(e)=>this.setState({schoolName: (e.target.value)})} />\n                    <TextField id=\"outlined-basic\" label=\"School Address\" variant=\"outlined\" onChange={(e)=>this.setState({address: (e.target.value)})} />\n                    <TextField id=\"outlined-basic\" label=\"In state?(true or false)\" variant=\"outlined\" onChange={(e)=>this.setState({inState: (e.target.value)})} />\n                    <TextField id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" onChange={(e)=>this.setState({notes: (e.target.value)})} />\n                    <Button type='submit' variant=\"contained\">Add school</Button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx",["101","102"],"import React, { Component } from 'react';\nimport SchoolDisplay from './schoolDisplay';\n\ntype FetchResultsState = {\n    search: string,\n    pageNumber: number,\n    results: any,\n}\n\ninterface Props {\n    token: string | null\n}\n\n\n// const baseURL = 'http://localhost:3000/schools/all';\n\n// console.log(results)\n// console.log(\"hello1\")\nexport default class SchoolSearch extends Component<Props, FetchResultsState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            search: '',\n            pageNumber: 0,\n            results: [], \n        };\n    }\n    searchFunction(event: any) {\n        this.setState({\n            search: (event)\n        })\n        console.log(\"hello4\")\n\n    }\n\n\n    // fetchResults = () => {\n    fetchResults(event: React.FormEvent<HTMLFormElement>){\n        event.preventDefault();\n    fetch('http://localhost:3000/schools/all', {\n        method: 'GET',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `${this.props.token}`,\n        })\n        \n    }) .then((res) => res.json())\n    .then(data => {\n        console.log(data)\n        this.setState({\n            results: data\n        })\n    }) .catch (( error) =>\n    console.log(error)\n    )\n}\n\n    \n\n    handleSubmit(event: any) {\n        event.preventDefault()\n        this.fetchResults(event)\n    }\n\n    nextPage(event: any){\n        event.preventDefault()\n        this.setState({\n            pageNumber: this.state.pageNumber+1\n        })\n        this.fetchResults(event)\n    }\n\n    previousPage(event: any){\n        event.preventDefault()\n        if(this.state.pageNumber > 0) {\n        this.setState({\n            pageNumber: this.state.pageNumber-1\n        })\n        this.fetchResults(event)\n    }\n    }\n\n    render() {\n        return (\n        <div className=\"main\">\n        <div className=\"mainDiv\">\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n                <label>Search: </label>\n                <input type =\"text\" name =\"search\" onChange ={(e) => this.setState({search: e.target.value})} />\n                <br />\n                <button type='submit'>Search</button>\n                <hr />\n                <SchoolDisplay results={this.state.results} />\n                <button onClick={(e)=> this.previousPage(e)}>Previous Page</button>\n                <button onClick={(e)=> this.nextPage(e)}>Next Page</button>\n            </form>\n        </div>\n        </div>\n        );\n    }\n}\n\n// export default SchoolSearch;","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":19},{"ruleId":"103","replacedBy":"111"},{"ruleId":"105","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":36,"column":9,"nodeType":"115","messageId":"116","endLine":53,"endColumn":18,"fix":"117"},{"ruleId":"113","severity":1,"message":"118","line":36,"column":9,"nodeType":"115","messageId":"116","endLine":51,"endColumn":16,"fix":"119"},{"ruleId":"113","severity":1,"message":"118","line":36,"column":9,"nodeType":"115","messageId":"116","endLine":49,"endColumn":17,"fix":"120"},{"ruleId":"107","severity":1,"message":"121","line":3,"column":27,"nodeType":"109","messageId":"110","endLine":3,"endColumn":33},{"ruleId":"107","severity":1,"message":"122","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":19},{"ruleId":"107","severity":1,"message":"123","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":24},{"ruleId":"107","severity":1,"message":"124","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":40,"column":5,"nodeType":"115","messageId":"116","endLine":53,"endColumn":14,"fix":"125"},{"ruleId":"113","severity":1,"message":"118","line":40,"column":5,"nodeType":"115","messageId":"116","endLine":47,"endColumn":13,"fix":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'AddAccepted' is defined but never used.","Identifier","unusedVar",["127"],["128"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"129","text":"130"},"Unexpected whitespace before property then.",{"range":"131","text":"130"},{"range":"132","text":"130"},"'Router' is defined but never used.","'Auth' is defined but never used.","'AddAcceptedIndex' is defined but never used.","'ReactHTML' is defined but never used.",{"range":"133","text":"130"},{"range":"134","text":"130"},"no-global-assign","no-unsafe-negation",[1325,1327],".",[1266,1268],[1206,1208],[1208,1210],[1067,1069]]