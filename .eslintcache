[{"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx":"1","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts":"2","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx":"3","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx":"4","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx":"5","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx":"6","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx":"7","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx":"8","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx":"9","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx":"10","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx":"11","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx":"12","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/AppIndex.tsx":"13","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/appIndex.tsx":"14","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx":"15","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx":"16","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx":"17","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx":"18","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx":"19","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedDisplay.tsx":"20","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx":"21","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/favoritesDisplay.tsx":"22","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/helpers/environment.tsx":"23"},{"size":502,"mtime":1609378983712,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608259726324,"results":"26","hashOfConfig":"25"},{"size":2239,"mtime":1610409912212,"results":"27","hashOfConfig":"25"},{"size":3899,"mtime":1610532962909,"results":"28","hashOfConfig":"25"},{"size":1449,"mtime":1610333627543,"results":"29","hashOfConfig":"25"},{"size":2191,"mtime":1610533513822,"results":"30","hashOfConfig":"25"},{"size":497,"mtime":1609982789593,"results":"31","hashOfConfig":"25"},{"size":826,"mtime":1610533460126,"results":"32","hashOfConfig":"25"},{"size":850,"mtime":1610533471217,"results":"33","hashOfConfig":"25"},{"size":3478,"mtime":1610536551753,"results":"34","hashOfConfig":"25"},{"size":496,"mtime":1610409894858,"results":"35","hashOfConfig":"25"},{"size":1956,"mtime":1610536494039,"results":"36","hashOfConfig":"25"},{"size":922,"mtime":1610243373970,"results":"37","hashOfConfig":"25"},{"size":1049,"mtime":1610536792770,"results":"38","hashOfConfig":"25"},{"size":867,"mtime":1610422757964,"results":"39","hashOfConfig":"25"},{"size":2558,"mtime":1610536803061,"results":"40","hashOfConfig":"25"},{"size":2497,"mtime":1610536804827,"results":"41","hashOfConfig":"25"},{"size":2350,"mtime":1610468537625,"results":"42","hashOfConfig":"25"},{"size":863,"mtime":1610540810279,"results":"43","hashOfConfig":"25"},{"size":2750,"mtime":1610540920051,"results":"44","hashOfConfig":"25"},{"size":6787,"mtime":1610536340839,"results":"45","hashOfConfig":"25"},{"size":2460,"mtime":1610541140796,"results":"46","hashOfConfig":"25"},{"size":285,"mtime":1610535995312,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2xbodk",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/index.tsx",[],["103","104"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/reportWebVitals.ts",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/App.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/index.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Home.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Navbar/Navbar.tsx",["105","106"],"import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Auth from '../Auth/Auth';\nimport { Link } from 'react-router-dom';\n// import AddAccepted from '../Accepted/addAcceptedIndex'\n\n\n// const useStyles = makeStyles(() =>\n//     createStyles({\n//         loginButton: {\n//             display: 'flex',\n//             justifyContent: 'flex-end'\n//         }\n//     }),\n// );\n\ninterface Props {\n    clearToken:() => void\n    token: string\n}\n\nconst NavbBar = (props: Props) => {\n    // const classes = useStyles();\n\n    return (\n        <AppBar position='fixed'>\n            <Toolbar>\n                <Grid container spacing={3}>\n                    {/* <Grid item xs>\n                        <Link to='home'>Home</Link>\n                    </Grid> */}\n                    <Grid item xs={6}></Grid>\n                    <Grid item xs >\n                        <Auth clearToken={props.clearToken} />\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/accepted/addschool'>Add Accepted</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/schools/all'>View all schools</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/accepted/myaccepted'>View all accepted</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/favorites/addschool'>Add Favorites</Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link to='/favorites/myfavorites'>View all favorites</Link>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n        // <div>\n        //     <Auth clearToken={props.clearToken} />\n        //     <Link to='/accepted/addschool'>Add Accepted</Link>\n        //     <Link to='/schools/all'>View all schools</Link>\n        //     <Link to='/accepted/myaccepted'>View all accepted</Link>\n        // </div>\n        // <p>nav bar goes here</p>\n    )\n}\n\nexport default NavbBar;","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/auth.tsx",[],["107","108"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signup.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/login.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/signupIndex.tsx",["109","110","111","112","113"],"import React, { Component } from 'react';\nimport { TextField, Button, MenuItem, FormControl, InputLabel, Select, FormHelperText } from '@material-ui/core';\nimport APIURL from '../../helpers/environment';\n\n\ntype SignUpState = {\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n    currentState: string,\n    role: string\n}\n\ninterface Props {\n    updateToken: (newToken: string) => void\n}\n\nexport default class SignUpIndex extends Component<Props, SignUpState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            currentState: '',\n            role: ''\n        }\n        // this.handleInputChange = this.handleImputChange.bind(this)\n    }\n\n    // handleChange(event) {\n    //     // this.setState({firstName: event.target.value})\n    //     const target = event.target;\n    //     const value = target.type === \n    // }\n\n    setFirstName(e: string) {\n        this.setState({\n            firstName: (e)\n        })\n    }\n\n    setLastName(e: string) {\n        this.setState({\n            lastName: (e)\n        })\n    }\n\n    setEmail(e: string) {\n        this.setState({\n            email: (e)\n        })\n    }\n\n    setPassword(e: string) {\n        this.setState({\n            password: (e)\n        })\n    }\n\n    setCurrentState(e: string) {\n        this.setState({\n            currentState: (e)\n        })\n    }\n\n    setRole(e: string) {\n        this.setState({\n            role: (e)\n        })\n    }\n\n    signUpUser(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        fetch(`${APIURL}/user/signup`, {\n            method: 'POST',\n            body: JSON.stringify({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                password: this.state.password,\n                currentState: this.state.currentState,\n                role: this.state.role\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then((response) => response.json())\n            .then((data) => {\n                this.props.updateToken(data.token)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this.signUpUser(e)} >\n                    <TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" onChange={(e) => this.setState({ firstName: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" onChange={(e) => this.setLastName(e.target.value)} />\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" onChange={(e) => this.setState({ email: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" type=\"password\" label=\"Password\" variant=\"outlined\" onChange={(e) => this.setState({ password: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Home State\" variant=\"outlined\" onChange={(e) => this.setState({ currentState: (e.target.value) })} />\n                    <TextField id=\"outlined-basic\" label=\"Role\" variant=\"outlined\" onChange={(e)=>this.setState({role: (e.target.value)})} />\n                    <Button type='submit' variant=\"contained\">Create Account</Button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/Auth.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Auth/loginIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/AppIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/appIndex.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavorites.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/addFavoritesIndex.tsx",[],["114","115"],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schools.tsx",["116","117","118","119"],"import React, { Component } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport SchoolDisplay from './schoolDisplay';\nimport APIURL from '../../helpers/environment';\n\ntype FetchResultsState = {\n    search: string,\n    pageNumber: number,\n    results: any,\n}\n\ninterface Props {\n    token: string\n}\n\n\nexport default class SchoolSearch extends Component<Props, FetchResultsState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            search: '',\n            pageNumber: 0,\n            results: [], \n        };\n    }\n    searchFunction(event: any) {\n        this.setState({\n            search: (event)\n        })\n        console.log(\"hello4\")\n\n    }\n\n\n    // fetchResults = () => {\n    fetchResults(event: React.FormEvent<HTMLFormElement>){\n        event.preventDefault();\n    fetch(`${APIURL}/schools/all`, {\n        method: 'GET',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': this.props.token,\n        })\n        \n    }) .then((res) => res.json())\n    .then(data => {\n        console.log(data)\n        this.setState({\n            results: data\n        })\n    }) .catch (( error) =>\n    console.log(error)\n    )\n}\n\n    \n\n    handleSubmit(event: any) {\n        event.preventDefault()\n        this.fetchResults(event)\n    }\n\n    nextPage(event: any){\n        event.preventDefault()\n        this.setState({\n            pageNumber: this.state.pageNumber+1\n        })\n        this.fetchResults(event)\n    }\n\n    previousPage(event: any){\n        event.preventDefault()\n        if(this.state.pageNumber > 0) {\n        this.setState({\n            pageNumber: this.state.pageNumber-1\n        })\n        this.fetchResults(event)\n    }\n    }\n\n    render() {\n        return (\n        <div className=\"main\">\n        <div className=\"mainDiv\">\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n                <label>Search: </label>\n                <input type =\"text\" name =\"search\" onChange ={(e) => this.setState({search: e.target.value})} />\n                <br />\n                <button type='submit'>Search</button>\n                <hr />\n                <SchoolDisplay results={this.state.results} />\n                <button onClick={(e)=> this.previousPage(e)}>Previous Page</button>\n                <button onClick={(e)=> this.nextPage(e)}>Next Page</button>\n            </form>\n        </div>\n        </div>\n        );\n    }\n}\n\n// export default SchoolSearch;","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Schools/schoolDisplay.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAccepted.tsx",[],"/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/acceptedDisplay.tsx",["120"],"import React, { Component } from 'react'\nimport APIURL from '../../helpers/environment';\nimport AddAccepted from './addAccepted'\nimport { Button, Card, CardContent } from '@material-ui/core';\nimport './acceptedDisplay.css'\n\n\ntype AcceptedState = {\n    accepted: Array<{\n        id: number,\n        schoolName: string,\n        address: string,\n        accepted: string,\n        pros: string,\n        cons: string,\n        notes: string,\n        inState: string,\n    }>\n\n}\n\ninterface Props {\n    token: string\n}\n\nconsole.log('oh hi mark')\n\n\nexport default class AcceptedDisplay extends Component<Props, AcceptedState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            accepted: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('hi im here in the componenetDidMount')\n        this.fetchAccepted();\n    }\n\n    fetchAccepted() {\n        console.log(\"orange\")\n        fetch(`${APIURL}/accepted/myaccepted`, {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.props.token,\n            })\n        }).then((res) => res.json())\n            .then(data => {\n                this.setState({\n                    accepted: data\n                })\n                console.log(\"potato\")\n                console.log(data)\n\n            }).catch((error) =>\n                console.log(error)\n            )\n    }\n\n    handleSubmit() {\n        // event.preventDefault()\n        this.fetchAccepted()\n    }\n    // handleOpen = () => {\n    //     this.setState({\n    //         handleOpen: true\n    //     })\n    // }\n    \n    render() {\n        return (\n            <div>\n                {this.state.accepted.map(accepted => {\n                    return(\n                        <Card id=\"overallCard\" key={accepted.id}>\n                            <CardContent>School Name: </CardContent>\n                        <CardContent id=\"schoolName\">{accepted.schoolName}</CardContent>\n                        <CardContent>Address: {accepted.address}</CardContent>\n                        <CardContent>Have I been accepted:  {accepted.accepted}</CardContent>\n                        <CardContent>Pros:  {accepted.pros}</CardContent>\n                        <CardContent>Cons:  {accepted.cons}</CardContent>\n                        <CardContent>Notes:  {accepted.notes}</CardContent>\n                        <CardContent>Is the school in state?  {accepted.inState}</CardContent>\n                        {/* <Button onClick={() => {this.fetchAccepted()}}>Fetch</Button> */}\n                        <Button>Update</Button>\n                        <Button>Delete</Button>\n                    </Card>\n                    )\n                })};\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Accepted/addAcceptedIndex.tsx",["121","122","123","124","125","126"],"\nimport React, { Component } from 'react';\nimport APIURL from '../../helpers/environment';\n// import { TextField, Button} from '@material-ui/core';\nimport {\n    Button,\n    FormGroup,\n    FormLabel,\n    FormControl,\n    InputLabel,\n    Box,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n   DialogActions,\n} from '@material-ui/core';\n\ntype AcceptedState = {\n    schoolName: string,\n    address: string,\n    inState: string,\n    accepted: string,\n    pros: string,\n    cons: string,\n    notes: string,\n    handleopen: boolean;\n}\n\ninterface Props {\n    // updateToken: (newToken: string) => void\n    token: string\n}\n\nexport default class AddAcceptedIndex extends React.Component<Props, AcceptedState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            schoolName: '',\n            address: '',\n            inState: '',\n            accepted: '',\n            pros: '',\n            cons: '',\n            notes: '',\n            handleopen: false,\n        }\n    }\n\n    // setSchoolName(e: string) {\n    //     this.setState({\n    //         schoolName: (e)\n    //     })\n    // }\n\n    // setAddress(e: string) {\n    //     this.setState({\n    //         address: (e)\n    //     })\n    // }\n\n    // setInState(e: string) {\n    //     this.setState({\n    //         inState: (e)\n    //     })\n    // }\n\n    // setAccepted(e: string) {\n    //     this.setState({\n    //         accepted: (e)\n    //     })\n    // }\n\n    // setPros(e: string) {\n    //     this.setState({\n    //         pros: (e)\n    //     })\n    // }\n\n    // setCons(e: string) {\n    //     this.setState({\n    //         cons: (e)\n    //     })\n    // }\n\n    // setNotes(e: string) {\n    //     this.setState({\n    //         notes: (e)\n    //     })\n    // }\n\n    // componentDidMount() {\n    //     console.log(localStorage.getItem('token'))\n    //     console.log(this.props.token);\n    //   }\n\n    setSchoolName(e: string) {\n        this.setState({\n            schoolName: (e)\n        })\n    }\n\n    setAddress(e: string) {\n        this.setState({\n            address: (e)\n        })\n    }\n\n    setInState(e: string) {\n        this.setState({\n            inState: (e)\n        })\n    }\n\n    setAccepted(e: string) {\n        this.setState({\n            accepted: (e)\n        })\n    }\n\n    setPros(e: string) {\n        this.setState({\n            pros: (e)\n        })\n    }\n\n    setCons(e: string) {\n        this.setState({\n            cons: (e)\n        })\n    }\n\n    setNotes(e: string) {\n        this.setState({\n            notes: (e)\n        })\n    }\n\n    handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\n        e.preventDefault();\n        fetch(`${APIURL}/accepted/addschool`, {\n            method: 'POST',\n            body: JSON.stringify({\n                schoolName: this.state.schoolName,\n                address: this.state.address,\n                inState: this.state.inState,\n                accepted: this.state.accepted,\n                pros: this.state.pros,\n                cons: this.state.cons,\n                notes: this.state.notes\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                // 'Authorization': `${localStorage.getItem('token')}`\n                'Authorization': this.props.token,\n            })\n        })\n        .then((response) => response.json())\n            .then((data) => {\n                console.log(data)\n                //this.props.fetchAccepted();\n            })\n            this.handleClose();\n    }\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    render() {\n        return (\n        <div className=\"container\">\n        <Button onClick={this.handleOpen} id=\"CreateButton\" variant=\"outlined\" >Add A School</Button>\n        <Dialog\n            fullWidth\n            open={this.state.handleopen}\n            onClose={this.handleClose}\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\">\n\n            <DialogTitle id=\"scroll-dialog-title\">Add School</DialogTitle>\n            <DialogContent id=\"Create\">\n            <TextField\n                    margin=\"dense\"\n                    label=\"School Name\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.schoolName}\n                    onChange={(event) => this.setState({schoolName: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Address\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.address}\n                    onChange={(event) => this.setState({address: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Have you been accepted?\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.accepted}\n                    onChange={(event) => this.setState({accepted: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Pros?\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.pros}\n                    onChange={(event) => this.setState({pros: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"cons?\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.cons}\n                    onChange={(event) => this.setState({cons: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Extra Notes:\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.notes}\n                    onChange={(event) => this.setState({notes: event.target.value})}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Is it in state?\"\n                    type=\"text\"\n                    fullWidth\n                    value={this.state.inState}\n                    onChange={(event) => {this.setState({inState: event.target.value})}}\n                />\n                <Button onClick={this.handleSubmit} id=\"btn\">Submit</Button>\n            </DialogContent>\n            <DialogActions id=\"Createbtn\">\n                \n                {/* <Button onClick={this.handleSubmit} >Submit</Button> */}\n            </DialogActions>\n        </Dialog>\n    </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/Components/Favorites/favoritesDisplay.tsx",["127"],"import React, { Component } from 'react'\nimport AddFavorites from './addFavorites'\nimport { Button, Card, CardContent } from '@material-ui/core';\n\n\n\ntype FavoritesState = {\n    favorites: Array<{\n        id: number,\n        schoolName: string,\n        address: string,\n        inState: string,\n        notes: string\n    }>\n\n}\n\ninterface Props {\n    token: string\n}\n\nconsole.log('oh hi mark')\n\nexport default class FavoritesDisplay extends Component<Props, FavoritesState>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            favorites: []\n        }\n    }\n\n    componentDidMount() {\n        // console.log('hi im here in the componenetDidMount')\n        this.fetchFavorites();\n    }\n\n    fetchFavorites() {\n        // console.log(\"orange\")\n        fetch('http://localhost:3000/favorites/myfavorites', {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token,\n            })\n        }).then((res) => res.json())\n            .then(data => {\n                this.setState({\n                    favorites: data\n                })\n                // console.log(\"potato\")\n                console.log(data)\n\n            }).catch((error) =>\n                console.log(error)\n            )\n    }\n\n    handleSubmit() {\n        // event.preventDefault()\n        this.fetchFavorites()\n    }\n    // handleOpen = () => {\n    //     this.setState({\n    //         handleOpen: true\n    //     })\n    // }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.favorites.map(favorites => {\n                    return (\n                        <Card key={favorites.id}>\n                            <CardContent>School Name: {favorites.schoolName}</CardContent>\n                            <CardContent>Address: {favorites.address}</CardContent>\n                            <CardContent>Is it in state?{favorites.inState}</CardContent>\n                            <CardContent>Notes?{favorites.notes}</CardContent>\n                            {/* <Button onClick={ this.handleOpen }></Button> */}\n                            {/* <Button onClick={() => { this.fetchFavorites() }}></Button> */}\n                            <Button>Update</Button>\n                            <Button>Delete</Button>\n                        </Card>\n                    )\n                })};\n            </div>\n        )\n    }\n}","/Users/mindyvega/Desktop/redBadgeFinalProject/collegeFinder/college-finder-client/src/helpers/environment.tsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"136","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":34},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","severity":1,"message":"139","line":2,"column":29,"nodeType":"134","messageId":"135","endLine":2,"endColumn":37},{"ruleId":"132","severity":1,"message":"140","line":2,"column":39,"nodeType":"134","messageId":"135","endLine":2,"endColumn":50},{"ruleId":"132","severity":1,"message":"141","line":2,"column":52,"nodeType":"134","messageId":"135","endLine":2,"endColumn":62},{"ruleId":"132","severity":1,"message":"142","line":2,"column":64,"nodeType":"134","messageId":"135","endLine":2,"endColumn":70},{"ruleId":"132","severity":1,"message":"143","line":2,"column":72,"nodeType":"134","messageId":"135","endLine":2,"endColumn":86},{"ruleId":"128","replacedBy":"144"},{"ruleId":"130","replacedBy":"145"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"136","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":38,"column":5,"nodeType":"148","messageId":"149","endLine":51,"endColumn":14,"fix":"150"},{"ruleId":"146","severity":1,"message":"151","line":38,"column":5,"nodeType":"148","messageId":"149","endLine":45,"endColumn":13,"fix":"152"},{"ruleId":"132","severity":1,"message":"153","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"154","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"155","line":7,"column":5,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"156","line":8,"column":5,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"140","line":9,"column":5,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"141","line":10,"column":5,"nodeType":"134","messageId":"135","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"157","line":11,"column":5,"nodeType":"134","messageId":"135","endLine":11,"endColumn":8},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.",["159"],["160"],"'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'FormHelperText' is defined but never used.",["159"],["160"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"161","text":"162"},"Unexpected whitespace before property then.",{"range":"163","text":"162"},"'AddAccepted' is defined but never used.","'Component' is defined but never used.","'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","'Box' is defined but never used.","'AddFavorites' is defined but never used.","no-global-assign","no-unsafe-negation",[1194,1196],".",[1053,1055]]